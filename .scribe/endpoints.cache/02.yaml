## Autogenerated by Scribe. DO NOT MODIFY.

name: Users
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get All Users'
      description: 'Retrieve a paginated list of all users.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"user","id":1,"attributes":{"name":"Lonny Rempel IV","email":"jack.marvin@example.net","is_manager":false},"includes":[],"links":{"self":"https:\/\/tickets-please.local\/api\/v1\/authors\/1"}},{"type":"user","id":2,"attributes":{"name":"Hosea Okuneva","email":"windler.damion@example.net","is_manager":false},"includes":[],"links":{"self":"https:\/\/tickets-please.local\/api\/v1\/authors\/2"}},{"type":"user","id":3,"attributes":{"name":"Lavonne Kirlin","email":"kohler.rodrigo@example.net","is_manager":false},"includes":[],"links":{"self":"https:\/\/tickets-please.local\/api\/v1\/authors\/3"}},{"type":"user","id":4,"attributes":{"name":"Prof. Angelita Harber V","email":"fhettinger@example.net","is_manager":false},"includes":[],"links":{"self":"https:\/\/tickets-please.local\/api\/v1\/authors\/4"}},{"type":"user","id":5,"attributes":{"name":"Norberto D''Amore","email":"witting.lester@example.com","is_manager":false},"includes":[],"links":{"self":"https:\/\/tickets-please.local\/api\/v1\/authors\/5"}},{"type":"user","id":6,"attributes":{"name":"Dr. Christophe Russel II","email":"larson.arvel@example.net","is_manager":false},"includes":[],"links":{"self":"https:\/\/tickets-please.local\/api\/v1\/authors\/6"}},{"type":"user","id":7,"attributes":{"name":"Jaylin Russel","email":"ibrown@example.net","is_manager":false},"includes":[],"links":{"self":"https:\/\/tickets-please.local\/api\/v1\/authors\/7"}},{"type":"user","id":8,"attributes":{"name":"Jeramy Bosco","email":"rachelle92@example.org","is_manager":false},"includes":[],"links":{"self":"https:\/\/tickets-please.local\/api\/v1\/authors\/8"}},{"type":"user","id":9,"attributes":{"name":"Dr. Delaney Prohaska I","email":"willms.gerardo@example.org","is_manager":false},"includes":[],"links":{"self":"https:\/\/tickets-please.local\/api\/v1\/authors\/9"}},{"type":"user","id":10,"attributes":{"name":"Alexzander Feest","email":"kurtis42@example.com","is_manager":false},"includes":[],"links":{"self":"https:\/\/tickets-please.local\/api\/v1\/authors\/10"}},{"type":"user","id":11,"attributes":{"name":"The Manager","email":"manager@manager.com","is_manager":true},"includes":[],"links":{"self":"https:\/\/tickets-please.local\/api\/v1\/authors\/11"}}],"links":{"first":"https:\/\/tickets-please.local\/api\/v1\/users?page=1","last":"https:\/\/tickets-please.local\/api\/v1\/users?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"https:\/\/tickets-please.local\/api\/v1\/users?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"path":"https:\/\/tickets-please.local\/api\/v1\/users","per_page":15,"to":11,"total":11}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 14|el2wVRadhNucOxU5GSOVuG7tvOX514H368ms9O4z59d63207'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create User'
      description: 'Create a new user with the provided details.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: true
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.isManager:
        name: data.attributes.isManager
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: 'Must be at least 8 characters.'
        required: true
        example: '-0pBNvYgxw'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: architecto
          email: zbailey@example.net
          isManager: false
          password: '-0pBNvYgxw'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 14|el2wVRadhNucOxU5GSOVuG7tvOX514H368ms9O4z59d63207'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display User'
      description: 'Retrieve the details of a specific user by their ID.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"user","id":1,"attributes":{"name":"Lonny Rempel IV","email":"jack.marvin@example.net","is_manager":false},"includes":[],"links":{"self":"https:\/\/tickets-please.local\/api\/v1\/authors\/1"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 14|el2wVRadhNucOxU5GSOVuG7tvOX514H368ms9O4z59d63207'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete User'
      description: 'Delete a specific user by their ID.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 14|el2wVRadhNucOxU5GSOVuG7tvOX514H368ms9O4z59d63207'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{user_id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User'
      description: 'Replace an existing user with new details.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: true
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.isManager:
        name: data.attributes.isManager
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: 'Must be at least 8 characters.'
        required: true
        example: '-0pBNvYgxw'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: architecto
          email: zbailey@example.net
          isManager: true
          password: '-0pBNvYgxw'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 14|el2wVRadhNucOxU5GSOVuG7tvOX514H368ms9O4z59d63207'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/users/{user_id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Path User'
      description: 'Update specific fields of an existing user.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: false
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.isManager:
        name: data.attributes.isManager
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: 'Must be at least 8 characters.'
        required: false
        example: '-0pBNvYgxw'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: architecto
          email: zbailey@example.net
          isManager: false
          password: '-0pBNvYgxw'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 14|el2wVRadhNucOxU5GSOVuG7tvOX514H368ms9O4z59d63207'
    controller: null
    method: null
    route: null
    custom: []
