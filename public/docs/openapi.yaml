openapi: 3.0.3
info:
  title: 'Tickets Please API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'https://tickets-please.local'
tags:
  -
    name: Authentication
    description: ''
  -
    name: 'Author Tickets'
    description: ''
  -
    name: Authors
    description: ''
  -
    name: Tickets
    description: ''
  -
    name: Users
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Authenticate a user and return an API token.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n     \"success\": true,\n     \"status\": 200,\n     \"data\":\n         { \"user data\" },\n         \"token\": \"{Your_Auth_Token}\",\n     },\n     \"message\": \"Authenticated\"\n}"
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gbailey@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters. Must not be greater than 255 characters.'
                  example: '+-0pBNvYgxwmi/#iw'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: Logout
      operationId: logout
      description: 'Logout the authenticated user by revoking their API token.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  status: 200
                  data: []
                  message: 'Logged out successfully'
                properties:
                  success:
                    type: boolean
                    example: true
                  status:
                    type: integer
                    example: 200
                  data:
                    type: array
                    example: []
                  message:
                    type: string
                    example: 'Logged out successfully'
      tags:
        - Authentication
  '/api/v1/authors/{author_id}/tickets':
    get:
      summary: 'Get All Tickets'
      operationId: getAllTickets
      description: 'Retrieve a paginated list of all tickets for a specific author.'
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  status: 500
                  type: TypeError
                  message: 'An unexpected error occurred.'
                  details: 'App\Http\Controllers\Api\V1\AuthorTicketsController::index(): Argument #1 ($author_id) must be of type int, string given, called in C:\OSPanel\home\laravel\petprojects\tickets-please.local\vendor\laravel\framework\src\Illuminate\Routing\ControllerDispatcher.php on line 46'
                  source: 'Line: 39 in C:\OSPanel\home\laravel\petprojects\tickets-please.local\app\Http\Controllers\Api\V1\AuthorTicketsController.php'
                properties:
                  success:
                    type: boolean
                    example: false
                  status:
                    type: integer
                    example: 500
                  type:
                    type: string
                    example: TypeError
                  message:
                    type: string
                    example: 'An unexpected error occurred.'
                  details:
                    type: string
                    example: 'App\Http\Controllers\Api\V1\AuthorTicketsController::index(): Argument #1 ($author_id) must be of type int, string given, called in C:\OSPanel\home\laravel\petprojects\tickets-please.local\vendor\laravel\framework\src\Illuminate\Routing\ControllerDispatcher.php on line 46'
                  source:
                    type: string
                    example: 'Line: 39 in C:\OSPanel\home\laravel\petprojects\tickets-please.local\app\Http\Controllers\Api\V1\AuthorTicketsController.php'
      tags:
        - 'Author Tickets'
    post:
      summary: 'Create Ticket'
      operationId: createTicket
      description: 'Create a new ticket with the provided details for a specific author.'
      parameters: []
      responses: {  }
      tags:
        - Tickets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: 'The title of the ticket.'
                          example: No-example
                          nullable: false
                        description:
                          type: string
                          description: 'The description of the ticket.'
                          example: No-example
                          nullable: false
                        status:
                          type: string
                          description: 'The status of the ticket. Allowed values: A (Active), C (Closed), H (On Hold), X (Cancelled).'
                          example: No-example
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                      required:
                        - title
                        - description
                        - status
                  required:
                    - attributes
                author:
                  type: integer
                  description: 'The author assigned to the ticket. The <code>id</code> of an existing record in the users table.'
                  example: 0
                  nullable: false
              required:
                - data
                - author
    parameters:
      -
        in: path
        name: author_id
        description: 'The ID of the author.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/v1/authors/{author_id}/tickets/{id}':
    delete:
      summary: 'Delete Ticket'
      operationId: deleteTicket
      description: 'Delete ticket for a specific author.'
      parameters: []
      responses: {  }
      tags:
        - 'Author Tickets'
    parameters:
      -
        in: path
        name: author_id
        description: 'The ID of the author.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/authors/{author}/tickets/{ticket}':
    put:
      summary: 'Update Ticket'
      operationId: updateTicket
      description: 'Update an existing ticket for a specific author.'
      parameters: []
      responses: {  }
      tags:
        - 'Author Tickets'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: architecto
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Eius et animi quos velit et.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: C
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                      required:
                        - title
                        - description
                        - status
    patch:
      summary: 'Path Ticket'
      operationId: pathTicket
      description: 'Update specific fields from an existing ticket for a specific author.'
      parameters: []
      responses: {  }
      tags:
        - 'Author Tickets'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: architecto
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Eius et animi quos velit et.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: C
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: string
                                  description: ''
                                  example: null
                                  nullable: false
    parameters:
      -
        in: path
        name: author
        description: 'The author.'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: ticket
        description: 'The ticket.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/authors:
    get:
      summary: 'Get All Authors'
      operationId: getAllAuthors
      description: 'Retrieve a paginated list of all authors who have created tickets. Used in include parameter.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: user
                      id: 1
                      attributes:
                        name: 'Lonny Rempel IV'
                        email: jack.marvin@example.net
                        is_manager: false
                        email_verified_at: '2025-08-21T17:01:43.000000Z'
                        created_at: '2025-08-21T17:01:43.000000Z'
                        updated_at: '2025-08-21T17:01:43.000000Z'
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/1'
                    -
                      type: user
                      id: 2
                      attributes:
                        name: 'Hosea Okuneva'
                        email: windler.damion@example.net
                        is_manager: false
                        email_verified_at: '2025-08-21T17:01:43.000000Z'
                        created_at: '2025-08-21T17:01:43.000000Z'
                        updated_at: '2025-08-21T17:01:43.000000Z'
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/2'
                    -
                      type: user
                      id: 3
                      attributes:
                        name: 'Lavonne Kirlin'
                        email: kohler.rodrigo@example.net
                        is_manager: false
                        email_verified_at: '2025-08-21T17:01:43.000000Z'
                        created_at: '2025-08-21T17:01:43.000000Z'
                        updated_at: '2025-08-21T17:01:43.000000Z'
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/3'
                    -
                      type: user
                      id: 4
                      attributes:
                        name: 'Prof. Angelita Harber V'
                        email: fhettinger@example.net
                        is_manager: false
                        email_verified_at: '2025-08-21T17:01:43.000000Z'
                        created_at: '2025-08-21T17:01:43.000000Z'
                        updated_at: '2025-08-21T17:01:43.000000Z'
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/4'
                    -
                      type: user
                      id: 5
                      attributes:
                        name: "Norberto D'Amore"
                        email: witting.lester@example.com
                        is_manager: false
                        email_verified_at: '2025-08-21T17:01:43.000000Z'
                        created_at: '2025-08-21T17:01:43.000000Z'
                        updated_at: '2025-08-21T17:01:43.000000Z'
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/5'
                    -
                      type: user
                      id: 6
                      attributes:
                        name: 'Dr. Christophe Russel II'
                        email: larson.arvel@example.net
                        is_manager: false
                        email_verified_at: '2025-08-21T17:01:43.000000Z'
                        created_at: '2025-08-21T17:01:43.000000Z'
                        updated_at: '2025-08-21T17:01:43.000000Z'
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/6'
                    -
                      type: user
                      id: 7
                      attributes:
                        name: 'Jaylin Russel'
                        email: ibrown@example.net
                        is_manager: false
                        email_verified_at: '2025-08-21T17:01:43.000000Z'
                        created_at: '2025-08-21T17:01:43.000000Z'
                        updated_at: '2025-08-21T17:01:43.000000Z'
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/7'
                    -
                      type: user
                      id: 8
                      attributes:
                        name: 'Jeramy Bosco'
                        email: rachelle92@example.org
                        is_manager: false
                        email_verified_at: '2025-08-21T17:01:43.000000Z'
                        created_at: '2025-08-21T17:01:43.000000Z'
                        updated_at: '2025-08-21T17:01:43.000000Z'
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/8'
                    -
                      type: user
                      id: 9
                      attributes:
                        name: 'Dr. Delaney Prohaska I'
                        email: willms.gerardo@example.org
                        is_manager: false
                        email_verified_at: '2025-08-21T17:01:43.000000Z'
                        created_at: '2025-08-21T17:01:43.000000Z'
                        updated_at: '2025-08-21T17:01:43.000000Z'
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/9'
                    -
                      type: user
                      id: 10
                      attributes:
                        name: 'Alexzander Feest'
                        email: kurtis42@example.com
                        is_manager: false
                        email_verified_at: '2025-08-21T17:01:43.000000Z'
                        created_at: '2025-08-21T17:01:43.000000Z'
                        updated_at: '2025-08-21T17:01:43.000000Z'
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/10'
                  links:
                    first: 'https://tickets-please.local/api/v1/authors?page=1'
                    last: 'https://tickets-please.local/api/v1/authors?page=8'
                    prev: null
                    next: 'https://tickets-please.local/api/v1/authors?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 8
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        page: null
                        active: false
                      -
                        url: 'https://tickets-please.local/api/v1/authors?page=1'
                        label: '1'
                        page: 1
                        active: true
                      -
                        url: 'https://tickets-please.local/api/v1/authors?page=2'
                        label: '2'
                        page: 2
                        active: false
                      -
                        url: 'https://tickets-please.local/api/v1/authors?page=3'
                        label: '3'
                        page: 3
                        active: false
                      -
                        url: 'https://tickets-please.local/api/v1/authors?page=4'
                        label: '4'
                        page: 4
                        active: false
                      -
                        url: 'https://tickets-please.local/api/v1/authors?page=5'
                        label: '5'
                        page: 5
                        active: false
                      -
                        url: 'https://tickets-please.local/api/v1/authors?page=6'
                        label: '6'
                        page: 6
                        active: false
                      -
                        url: 'https://tickets-please.local/api/v1/authors?page=7'
                        label: '7'
                        page: 7
                        active: false
                      -
                        url: 'https://tickets-please.local/api/v1/authors?page=8'
                        label: '8'
                        page: 8
                        active: false
                      -
                        url: 'https://tickets-please.local/api/v1/authors?page=2'
                        label: 'Next &raquo;'
                        page: 2
                        active: false
                    path: 'https://tickets-please.local/api/v1/authors'
                    per_page: 15
                    to: 10
                    total: 106
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: user
                        id: 1
                        attributes:
                          name: 'Lonny Rempel IV'
                          email: jack.marvin@example.net
                          is_manager: false
                          email_verified_at: '2025-08-21T17:01:43.000000Z'
                          created_at: '2025-08-21T17:01:43.000000Z'
                          updated_at: '2025-08-21T17:01:43.000000Z'
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/1'
                      -
                        type: user
                        id: 2
                        attributes:
                          name: 'Hosea Okuneva'
                          email: windler.damion@example.net
                          is_manager: false
                          email_verified_at: '2025-08-21T17:01:43.000000Z'
                          created_at: '2025-08-21T17:01:43.000000Z'
                          updated_at: '2025-08-21T17:01:43.000000Z'
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/2'
                      -
                        type: user
                        id: 3
                        attributes:
                          name: 'Lavonne Kirlin'
                          email: kohler.rodrigo@example.net
                          is_manager: false
                          email_verified_at: '2025-08-21T17:01:43.000000Z'
                          created_at: '2025-08-21T17:01:43.000000Z'
                          updated_at: '2025-08-21T17:01:43.000000Z'
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/3'
                      -
                        type: user
                        id: 4
                        attributes:
                          name: 'Prof. Angelita Harber V'
                          email: fhettinger@example.net
                          is_manager: false
                          email_verified_at: '2025-08-21T17:01:43.000000Z'
                          created_at: '2025-08-21T17:01:43.000000Z'
                          updated_at: '2025-08-21T17:01:43.000000Z'
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/4'
                      -
                        type: user
                        id: 5
                        attributes:
                          name: "Norberto D'Amore"
                          email: witting.lester@example.com
                          is_manager: false
                          email_verified_at: '2025-08-21T17:01:43.000000Z'
                          created_at: '2025-08-21T17:01:43.000000Z'
                          updated_at: '2025-08-21T17:01:43.000000Z'
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/5'
                      -
                        type: user
                        id: 6
                        attributes:
                          name: 'Dr. Christophe Russel II'
                          email: larson.arvel@example.net
                          is_manager: false
                          email_verified_at: '2025-08-21T17:01:43.000000Z'
                          created_at: '2025-08-21T17:01:43.000000Z'
                          updated_at: '2025-08-21T17:01:43.000000Z'
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/6'
                      -
                        type: user
                        id: 7
                        attributes:
                          name: 'Jaylin Russel'
                          email: ibrown@example.net
                          is_manager: false
                          email_verified_at: '2025-08-21T17:01:43.000000Z'
                          created_at: '2025-08-21T17:01:43.000000Z'
                          updated_at: '2025-08-21T17:01:43.000000Z'
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/7'
                      -
                        type: user
                        id: 8
                        attributes:
                          name: 'Jeramy Bosco'
                          email: rachelle92@example.org
                          is_manager: false
                          email_verified_at: '2025-08-21T17:01:43.000000Z'
                          created_at: '2025-08-21T17:01:43.000000Z'
                          updated_at: '2025-08-21T17:01:43.000000Z'
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/8'
                      -
                        type: user
                        id: 9
                        attributes:
                          name: 'Dr. Delaney Prohaska I'
                          email: willms.gerardo@example.org
                          is_manager: false
                          email_verified_at: '2025-08-21T17:01:43.000000Z'
                          created_at: '2025-08-21T17:01:43.000000Z'
                          updated_at: '2025-08-21T17:01:43.000000Z'
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/9'
                      -
                        type: user
                        id: 10
                        attributes:
                          name: 'Alexzander Feest'
                          email: kurtis42@example.com
                          is_manager: false
                          email_verified_at: '2025-08-21T17:01:43.000000Z'
                          created_at: '2025-08-21T17:01:43.000000Z'
                          updated_at: '2025-08-21T17:01:43.000000Z'
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/10'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: user
                        id:
                          type: integer
                          example: 1
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Lonny Rempel IV'
                            email:
                              type: string
                              example: jack.marvin@example.net
                            is_manager:
                              type: boolean
                              example: false
                            email_verified_at:
                              type: string
                              example: '2025-08-21T17:01:43.000000Z'
                            created_at:
                              type: string
                              example: '2025-08-21T17:01:43.000000Z'
                            updated_at:
                              type: string
                              example: '2025-08-21T17:01:43.000000Z'
                        includes:
                          type: array
                          example: []
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'https://tickets-please.local/api/v1/authors/1'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'https://tickets-please.local/api/v1/authors?page=1'
                      last:
                        type: string
                        example: 'https://tickets-please.local/api/v1/authors?page=8'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'https://tickets-please.local/api/v1/authors?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 8
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            page: null
                            active: false
                          -
                            url: 'https://tickets-please.local/api/v1/authors?page=1'
                            label: '1'
                            page: 1
                            active: true
                          -
                            url: 'https://tickets-please.local/api/v1/authors?page=2'
                            label: '2'
                            page: 2
                            active: false
                          -
                            url: 'https://tickets-please.local/api/v1/authors?page=3'
                            label: '3'
                            page: 3
                            active: false
                          -
                            url: 'https://tickets-please.local/api/v1/authors?page=4'
                            label: '4'
                            page: 4
                            active: false
                          -
                            url: 'https://tickets-please.local/api/v1/authors?page=5'
                            label: '5'
                            page: 5
                            active: false
                          -
                            url: 'https://tickets-please.local/api/v1/authors?page=6'
                            label: '6'
                            page: 6
                            active: false
                          -
                            url: 'https://tickets-please.local/api/v1/authors?page=7'
                            label: '7'
                            page: 7
                            active: false
                          -
                            url: 'https://tickets-please.local/api/v1/authors?page=8'
                            label: '8'
                            page: 8
                            active: false
                          -
                            url: 'https://tickets-please.local/api/v1/authors?page=2'
                            label: 'Next &raquo;'
                            page: 2
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            page:
                              type: string
                              example: null
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'https://tickets-please.local/api/v1/authors'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 106
      tags:
        - Authors
  '/api/v1/authors/{id}':
    get:
      summary: 'Display Author'
      operationId: displayAuthor
      description: 'Retrieve the details of a specific author by their ID used in include parameter.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 1
                    attributes:
                      name: 'Lonny Rempel IV'
                      email: jack.marvin@example.net
                      is_manager: false
                      email_verified_at: '2025-08-21T17:01:43.000000Z'
                      created_at: '2025-08-21T17:01:43.000000Z'
                      updated_at: '2025-08-21T17:01:43.000000Z'
                    includes: []
                    links:
                      self: 'https://tickets-please.local/api/v1/authors/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Lonny Rempel IV'
                          email:
                            type: string
                            example: jack.marvin@example.net
                          is_manager:
                            type: boolean
                            example: false
                          email_verified_at:
                            type: string
                            example: '2025-08-21T17:01:43.000000Z'
                          created_at:
                            type: string
                            example: '2025-08-21T17:01:43.000000Z'
                          updated_at:
                            type: string
                            example: '2025-08-21T17:01:43.000000Z'
                      includes:
                        type: array
                        example: []
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'https://tickets-please.local/api/v1/authors/1'
      tags:
        - Authors
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the author.'
        example: 1
        required: true
        schema:
          type: integer
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Register a new user.'
      parameters: []
      responses: {  }
      tags:
        - Tickets
  /api/v1/tickets:
    get:
      summary: 'Get All Tickets'
      operationId: getAllTickets
      description: 'Retrieve a paginated list of all tickets.'
      parameters:
        -
          in: query
          name: sort
          description: "Data field(s) to sort by. Separate multiple fields with commas.\nDash means DESC order. No dash means ASC order."
          example: 'sort=created_at,-title'
          required: false
          schema:
            type: string
            description: "Data field(s) to sort by. Separate multiple fields with commas.\nDash means DESC order. No dash means ASC order."
            example: 'sort=created_at,-title'
            nullable: false
        -
          in: query
          name: 'filter[status]'
          description: 'Filter tickets by status.'
          example: 'filter[status]=A,C,X,H'
          required: false
          schema:
            type: string
            description: 'Filter tickets by status.'
            example: 'filter[status]=A,C,X,H'
            nullable: false
        -
          in: query
          name: 'filter[title]'
          description: 'Filter tickets by title.'
          example: 'filter[title]=*id*'
          required: false
          schema:
            type: string
            description: 'Filter tickets by title.'
            example: 'filter[title]=*id*'
            nullable: false
        -
          in: query
          name: 'filter[createdAt]'
          description: 'Filter tickets by created at date.'
          example: 'filter[createdAt]=2025-08-15,2025-08-19'
          required: false
          schema:
            type: string
            description: 'Filter tickets by created at date.'
            example: 'filter[createdAt]=2025-08-15,2025-08-19'
            nullable: false
        -
          in: query
          name: 'filter[updatedAt]'
          description: 'Filter tickets by updated at date.'
          example: 'filter[updatedAt]=2025-08-15,2025-08-19'
          required: false
          schema:
            type: string
            description: 'Filter tickets by updated at date.'
            example: 'filter[updatedAt]=2025-08-15,2025-08-19'
            nullable: false
        -
          in: query
          name: include
          description: 'Include related resources.'
          example: include=author
          required: false
          schema:
            type: string
            description: 'Include related resources.'
            example: include=author
            nullable: false
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  status: 500
                  type: Illuminate\Database\Eloquent\RelationNotFoundException
                  message: 'An unexpected error occurred.'
                  details: 'Call to undefined relationship [include=author] on model [App\Models\Ticket].'
                  source: 'Line: 35 in C:\OSPanel\home\laravel\petprojects\tickets-please.local\vendor\laravel\framework\src\Illuminate\Database\Eloquent\RelationNotFoundException.php'
                properties:
                  success:
                    type: boolean
                    example: false
                  status:
                    type: integer
                    example: 500
                  type:
                    type: string
                    example: Illuminate\Database\Eloquent\RelationNotFoundException
                  message:
                    type: string
                    example: 'An unexpected error occurred.'
                  details:
                    type: string
                    example: 'Call to undefined relationship [include=author] on model [App\Models\Ticket].'
                  source:
                    type: string
                    example: 'Line: 35 in C:\OSPanel\home\laravel\petprojects\tickets-please.local\vendor\laravel\framework\src\Illuminate\Database\Eloquent\RelationNotFoundException.php'
      tags:
        - Tickets
    post:
      summary: 'Create Ticket'
      operationId: createTicket
      description: 'Create a new ticket with the provided details.'
      parameters: []
      responses: {  }
      tags:
        - Tickets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: 'The title of the ticket.'
                          example: No-example
                          nullable: false
                        description:
                          type: string
                          description: 'The description of the ticket.'
                          example: No-example
                          nullable: false
                        status:
                          type: string
                          description: 'The status of the ticket. Allowed values: A (Active), C (Closed), H (On Hold), X (Cancelled).'
                          example: No-example
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                      required:
                        - title
                        - description
                        - status
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: string
                          description: ''
                          example: architecto
                          nullable: false
                      required:
                        - author
                  required:
                    - attributes
                    - relationships
              required:
                - data
  '/api/v1/tickets/{id}':
    get:
      summary: 'Display Ticket'
      operationId: displayTicket
      description: 'Retrieve details of a specific ticket.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: ticket
                    id: 1
                    attributes:
                      title: 'et consequuntur optio'
                      description: 'Recusandae sunt beatae facilis repellat autem suscipit eius. Assumenda incidunt officiis illo assumenda dolor. Eius sit quasi maiores voluptatum molestias sint. A neque eum est soluta et itaque.'
                      status: C
                      created_at: '2025-08-21T17:01:43+00:00'
                      updated_at: '2025-08-21T17:01:43+00:00'
                    relationships:
                      author:
                        data:
                          type: authors
                          id: 3
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/3'
                    includes: []
                    links:
                      self: 'https://tickets-please.local/api/v1/tickets/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: ticket
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          title:
                            type: string
                            example: 'et consequuntur optio'
                          description:
                            type: string
                            example: 'Recusandae sunt beatae facilis repellat autem suscipit eius. Assumenda incidunt officiis illo assumenda dolor. Eius sit quasi maiores voluptatum molestias sint. A neque eum est soluta et itaque.'
                          status:
                            type: string
                            example: C
                          created_at:
                            type: string
                            example: '2025-08-21T17:01:43+00:00'
                          updated_at:
                            type: string
                            example: '2025-08-21T17:01:43+00:00'
                      relationships:
                        type: object
                        properties:
                          author:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: authors
                                  id:
                                    type: integer
                                    example: 3
                              links:
                                type: object
                                properties:
                                  self:
                                    type: string
                                    example: 'https://tickets-please.local/api/v1/authors/3'
                      includes:
                        type: array
                        example: []
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'https://tickets-please.local/api/v1/tickets/1'
      tags:
        - Tickets
    delete:
      summary: 'Delete Ticket'
      operationId: deleteTicket
      description: 'Delete a specific ticket.'
      parameters: []
      responses: {  }
      tags:
        - Tickets
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/tickets/{ticket_id}':
    put:
      summary: 'Update Ticket'
      operationId: updateTicket
      description: 'Update an existing ticket.'
      parameters: []
      responses: {  }
      tags:
        - Tickets
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: architecto
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Eius et animi quos velit et.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: H
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                      required:
                        - title
                        - description
                        - status
    patch:
      summary: 'Path Ticket'
      operationId: pathTicket
      description: 'Update specific fields of an existing ticket.'
      parameters: []
      responses: {  }
      tags:
        - Tickets
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: architecto
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Eius et animi quos velit et.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: C
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: string
                                  description: ''
                                  example: null
                                  nullable: false
    parameters:
      -
        in: path
        name: ticket_id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/users:
    get:
      summary: 'Get All Users'
      operationId: getAllUsers
      description: 'Retrieve a paginated list of all users.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: user
                      id: 1
                      attributes:
                        name: 'Lonny Rempel IV'
                        email: jack.marvin@example.net
                        is_manager: false
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/1'
                    -
                      type: user
                      id: 2
                      attributes:
                        name: 'Hosea Okuneva'
                        email: windler.damion@example.net
                        is_manager: false
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/2'
                    -
                      type: user
                      id: 3
                      attributes:
                        name: 'Lavonne Kirlin'
                        email: kohler.rodrigo@example.net
                        is_manager: false
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/3'
                    -
                      type: user
                      id: 4
                      attributes:
                        name: 'Prof. Angelita Harber V'
                        email: fhettinger@example.net
                        is_manager: false
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/4'
                    -
                      type: user
                      id: 5
                      attributes:
                        name: "Norberto D'Amore"
                        email: witting.lester@example.com
                        is_manager: false
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/5'
                    -
                      type: user
                      id: 6
                      attributes:
                        name: 'Dr. Christophe Russel II'
                        email: larson.arvel@example.net
                        is_manager: false
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/6'
                    -
                      type: user
                      id: 7
                      attributes:
                        name: 'Jaylin Russel'
                        email: ibrown@example.net
                        is_manager: false
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/7'
                    -
                      type: user
                      id: 8
                      attributes:
                        name: 'Jeramy Bosco'
                        email: rachelle92@example.org
                        is_manager: false
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/8'
                    -
                      type: user
                      id: 9
                      attributes:
                        name: 'Dr. Delaney Prohaska I'
                        email: willms.gerardo@example.org
                        is_manager: false
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/9'
                    -
                      type: user
                      id: 10
                      attributes:
                        name: 'Alexzander Feest'
                        email: kurtis42@example.com
                        is_manager: false
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/10'
                    -
                      type: user
                      id: 11
                      attributes:
                        name: 'The Manager'
                        email: manager@manager.com
                        is_manager: true
                      includes: []
                      links:
                        self: 'https://tickets-please.local/api/v1/authors/11'
                  links:
                    first: 'https://tickets-please.local/api/v1/users?page=1'
                    last: 'https://tickets-please.local/api/v1/users?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        page: null
                        active: false
                      -
                        url: 'https://tickets-please.local/api/v1/users?page=1'
                        label: '1'
                        page: 1
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        page: null
                        active: false
                    path: 'https://tickets-please.local/api/v1/users'
                    per_page: 15
                    to: 11
                    total: 11
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: user
                        id: 1
                        attributes:
                          name: 'Lonny Rempel IV'
                          email: jack.marvin@example.net
                          is_manager: false
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/1'
                      -
                        type: user
                        id: 2
                        attributes:
                          name: 'Hosea Okuneva'
                          email: windler.damion@example.net
                          is_manager: false
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/2'
                      -
                        type: user
                        id: 3
                        attributes:
                          name: 'Lavonne Kirlin'
                          email: kohler.rodrigo@example.net
                          is_manager: false
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/3'
                      -
                        type: user
                        id: 4
                        attributes:
                          name: 'Prof. Angelita Harber V'
                          email: fhettinger@example.net
                          is_manager: false
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/4'
                      -
                        type: user
                        id: 5
                        attributes:
                          name: "Norberto D'Amore"
                          email: witting.lester@example.com
                          is_manager: false
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/5'
                      -
                        type: user
                        id: 6
                        attributes:
                          name: 'Dr. Christophe Russel II'
                          email: larson.arvel@example.net
                          is_manager: false
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/6'
                      -
                        type: user
                        id: 7
                        attributes:
                          name: 'Jaylin Russel'
                          email: ibrown@example.net
                          is_manager: false
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/7'
                      -
                        type: user
                        id: 8
                        attributes:
                          name: 'Jeramy Bosco'
                          email: rachelle92@example.org
                          is_manager: false
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/8'
                      -
                        type: user
                        id: 9
                        attributes:
                          name: 'Dr. Delaney Prohaska I'
                          email: willms.gerardo@example.org
                          is_manager: false
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/9'
                      -
                        type: user
                        id: 10
                        attributes:
                          name: 'Alexzander Feest'
                          email: kurtis42@example.com
                          is_manager: false
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/10'
                      -
                        type: user
                        id: 11
                        attributes:
                          name: 'The Manager'
                          email: manager@manager.com
                          is_manager: true
                        includes: []
                        links:
                          self: 'https://tickets-please.local/api/v1/authors/11'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: user
                        id:
                          type: integer
                          example: 1
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Lonny Rempel IV'
                            email:
                              type: string
                              example: jack.marvin@example.net
                            is_manager:
                              type: boolean
                              example: false
                        includes:
                          type: array
                          example: []
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'https://tickets-please.local/api/v1/authors/1'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'https://tickets-please.local/api/v1/users?page=1'
                      last:
                        type: string
                        example: 'https://tickets-please.local/api/v1/users?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            page: null
                            active: false
                          -
                            url: 'https://tickets-please.local/api/v1/users?page=1'
                            label: '1'
                            page: 1
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            page: null
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            page:
                              type: string
                              example: null
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'https://tickets-please.local/api/v1/users'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 11
                      total:
                        type: integer
                        example: 11
      tags:
        - Users
    post:
      summary: 'Create User'
      operationId: createUser
      description: 'Create a new user with the provided details.'
      parameters: []
      responses: {  }
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: ''
                          example: architecto
                          nullable: false
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: zbailey@example.net
                          nullable: false
                        isManager:
                          type: boolean
                          description: ''
                          example: false
                          nullable: false
                        password:
                          type: string
                          description: 'Must be at least 8 characters.'
                          example: '-0pBNvYgxw'
                          nullable: false
                      required:
                        - name
                        - email
                        - isManager
                        - password
  '/api/v1/users/{id}':
    get:
      summary: 'Display User'
      operationId: displayUser
      description: 'Retrieve the details of a specific user by their ID.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 1
                    attributes:
                      name: 'Lonny Rempel IV'
                      email: jack.marvin@example.net
                      is_manager: false
                    includes: []
                    links:
                      self: 'https://tickets-please.local/api/v1/authors/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Lonny Rempel IV'
                          email:
                            type: string
                            example: jack.marvin@example.net
                          is_manager:
                            type: boolean
                            example: false
                      includes:
                        type: array
                        example: []
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'https://tickets-please.local/api/v1/authors/1'
      tags:
        - Users
    delete:
      summary: 'Delete User'
      operationId: deleteUser
      description: 'Delete a specific user by their ID.'
      parameters: []
      responses: {  }
      tags:
        - Users
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/users/{user_id}':
    put:
      summary: 'Update User'
      operationId: updateUser
      description: 'Replace an existing user with new details.'
      parameters: []
      responses: {  }
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: ''
                          example: architecto
                          nullable: false
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: zbailey@example.net
                          nullable: false
                        isManager:
                          type: boolean
                          description: ''
                          example: true
                          nullable: false
                        password:
                          type: string
                          description: 'Must be at least 8 characters.'
                          example: '-0pBNvYgxw'
                          nullable: false
                      required:
                        - name
                        - email
                        - isManager
                        - password
    patch:
      summary: 'Path User'
      operationId: pathUser
      description: 'Update specific fields of an existing user.'
      parameters: []
      responses: {  }
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: ''
                          example: architecto
                          nullable: false
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: zbailey@example.net
                          nullable: false
                        isManager:
                          type: boolean
                          description: ''
                          example: false
                          nullable: false
                        password:
                          type: string
                          description: 'Must be at least 8 characters.'
                          example: '-0pBNvYgxw'
                          nullable: false
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
